<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.zero.admin</groupId>
	<artifactId>zero-admin</artifactId>
	<name>Zero-Admin-Api</name>
	<version>${revision}</version>
	<packaging>pom</packaging>

	<properties>
		<revision>0.0.1</revision>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- foundation -->
		<java.version>21</java.version>
		<spring-boot.version>3.4.3</spring-boot.version>
		<spring-boot-admin.version>3.4.5</spring-boot-admin.version>
		<mybatis.version>3.5.19</mybatis.version>
		<mybatis-plus.version>3.5.10.1</mybatis-plus.version>
		<dynamic-ds.version>4.3.1</dynamic-ds.version>
		<postgresql.version>42.7.5</postgresql.version>

		<!-- tools -->
		<hutool.version>5.8.36</hutool.version>
		<lombok.version>1.18.36</lombok.version>
		<bouncycastle.version>1.80</bouncycastle.version>
		<mapstruct-plus.lombok.version>0.2.0</mapstruct-plus.lombok.version>
		<mapstruct-plus.version>1.4.6</mapstruct-plus.version>
		<redisson.version>3.45.1</redisson.version>
		<lock4j.version>2.2.7</lock4j.version>
		<satoken.version>1.40.0</satoken.version>
		<easyexcel.version>4.0.3</easyexcel.version>
		<p6spy.version>3.9.1</p6spy.version>
		<fastjson.version>2.0.56</fastjson.version>
		<!-- OSS 配置 -->
		<aws.sdk.version>2.31.3</aws.sdk.version>
		<aws.crt.version>0.36.3</aws.crt.version>

		<!-- helper -->
		<therapi-javadoc.version>0.15.0</therapi-javadoc.version>
		<justauth.version>1.16.7</justauth.version>
		<ip2region.version>2.7.0</ip2region.version>

		<!-- plugin -->
		<maven-jar-plugin.version>3.4.0</maven-jar-plugin.version>
		<maven-war-plugin.version>3.4.0</maven-war-plugin.version>
		<maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
		<flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
	</properties>

	<profiles>
		<profile>
			<id>local</id>
			<properties>
				<!-- 环境标识，需要与配置文件的名称相对应 -->
				<profiles.active>local</profiles.active>
				<logging.level>info</logging.level>
				<monitor.username>zero</monitor.username>
				<monitor.password>123456</monitor.password>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<!-- 环境标识，需要与配置文件的名称相对应 -->
				<profiles.active>dev</profiles.active>
				<logging.level>info</logging.level>
				<monitor.username>admin</monitor.username>
				<monitor.password>admin123</monitor.password>
			</properties>
			<activation>
				<!-- 默认环境 -->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<profiles.active>prod</profiles.active>
				<logging.level>warn</logging.level>
				<monitor.username>admin</monitor.username>
				<monitor.password>admin123</monitor.password>
			</properties>
		</profile>
	</profiles>

	<!-- 依赖声明 -->
	<dependencyManagement>
		<dependencies>

			<!-- SpringBoot的依赖配置-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-server</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-client</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>

			<!-- dynamic-datasource 多数据源-->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>dynamic-datasource-spring-boot3-starter</artifactId>
				<version>${dynamic-ds.version}</version>
			</dependency>

			<!-- hutool 的依赖配置-->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-bom</artifactId>
				<version>${hutool.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- base 的依赖配置-->
			<dependency>
				<groupId>com.zero.admin</groupId>
				<artifactId>zero-base-bom</artifactId>
				<version>${revision}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.zero.admin</groupId>
				<artifactId>zero-system</artifactId>
				<version>${revision}</version>
			</dependency>

			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>

			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-spring-boot3-starter</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>

			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-jsqlparser</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>

			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-annotation</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>
			<!-- sql性能分析插件 -->
			<dependency>
				<groupId>p6spy</groupId>
				<artifactId>p6spy</artifactId>
				<version>${p6spy.version}</version>
			</dependency>

			<!--redisson-->
			<dependency>
				<groupId>org.redisson</groupId>
				<artifactId>redisson-spring-boot-starter</artifactId>
				<version>${redisson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>lock4j-redisson-spring-boot-starter</artifactId>
				<version>${lock4j.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.18.0</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>

			<!-- 加密包引入 -->
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk18on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>

			<dependency>
				<groupId>io.github.linpeilie</groupId>
				<artifactId>mapstruct-plus-spring-boot-starter</artifactId>
				<version>${mapstruct-plus.version}</version>
			</dependency>

			<!-- Sa-Token 权限认证, 在线文档：http://sa-token.dev33.cn/ -->
			<dependency>
				<groupId>cn.dev33</groupId>
				<artifactId>sa-token-spring-boot3-starter</artifactId>
				<version>${satoken.version}</version>
			</dependency>
			<!-- Sa-Token 整合 jwt -->
			<dependency>
				<groupId>cn.dev33</groupId>
				<artifactId>sa-token-jwt</artifactId>
				<version>${satoken.version}</version>
				<exclusions>
					<exclusion>
						<groupId>cn.hutool</groupId>
						<artifactId>hutool-all</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>cn.dev33</groupId>
				<artifactId>sa-token-core</artifactId>
				<version>${satoken.version}</version>
			</dependency>

			<!-- JustAuth 的依赖配置-->
			<dependency>
				<groupId>me.zhyd.oauth</groupId>
				<artifactId>JustAuth</artifactId>
				<version>${justauth.version}</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>easyexcel</artifactId>
				<version>${easyexcel.version}</version>
			</dependency>

			<!-- 离线IP地址定位库 ip2region -->
			<dependency>
				<groupId>org.lionsoul</groupId>
				<artifactId>ip2region</artifactId>
				<version>${ip2region.version}</version>
			</dependency>

			<!--  AWS SDK for Java 2.x  -->
			<dependency>
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>s3</artifactId>
				<version>${aws.sdk.version}</version>
			</dependency>
			<!-- 使用AWS基于 CRT 的 S3 客户端 -->
			<dependency>
				<groupId>software.amazon.awssdk.crt</groupId>
				<artifactId>aws-crt</artifactId>
				<version>${aws.crt.version}</version>
			</dependency>
			<!-- 基于 AWS CRT 的 S3 客户端的性能增强的 S3 传输管理器 -->
			<dependency>
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>s3-transfer-manager</artifactId>
				<version>${aws.sdk.version}</version>
			</dependency>

			<!-- test -->
<!--			<dependency>-->
<!--				<groupId>org.junit.jupiter</groupId>-->
<!--				<artifactId>junit-jupiter-api</artifactId>-->
<!--				<version>5.10.0</version>-->
<!--				<scope>test</scope>-->
<!--			</dependency>-->
<!--			<dependency>-->
<!--				<groupId>org.junit.jupiter</groupId>-->
<!--				<artifactId>junit-jupiter-engine</artifactId>-->
<!--				<version>5.10.0</version>-->
<!--				<scope>test</scope>-->
<!--			</dependency>-->
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>zero-admin</module>
		<module>zero-base</module>
		<module>zero-modules</module>
	</modules>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<annotationProcessorPaths>
						<path>
							<groupId>com.github.therapi</groupId>
							<artifactId>therapi-runtime-javadoc-scribe</artifactId>
							<version>${therapi-javadoc.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-configuration-processor</artifactId>
							<version>${spring-boot.version}</version>
						</path>
						<path>
							<groupId>io.github.linpeilie</groupId>
							<artifactId>mapstruct-plus-processor</artifactId>
							<version>${mapstruct-plus.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${mapstruct-plus.lombok.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<!-- 单元测试使用 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<!-- 根据打包环境执行对应的@Tag测试方法 -->
					<groups>${profiles.active}</groups>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<!-- 排除标签 -->
					<excludedGroups>exclude</excludedGroups>
				</configuration>
			</plugin>
			<!-- 统一版本号管理 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${flatten-maven-plugin.version}</version>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- 关闭过滤 -->
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<!-- 引入所有 匹配文件进行过滤 -->
				<includes>
					<include>application*</include>
					<include>bootstrap*</include>
					<include>banner*</include>
				</includes>
				<!-- 启用过滤 即该资源中的变量将会被过滤器中的值替换 -->
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

</project>


